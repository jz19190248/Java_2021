package org.aeroplane;
	import java.util.*;
	import java.io.*;
	public class Client {
		private String flightName = null; 						// 航班名
		private int row = 0; 								// 座位排数
		private int rowLength = 0; 							// 每排座位数
		private Flight flight = null;	 						// 本次航班对象
		private String cmdString = null; 						// 命令串
		private BufferedReader br = new BufferedReader(new InputStreamReader(
			System.in));								// 获取控制台命令
		public static void main(String[] args) {
			new Flight().commandShell(); 					// 命令shell
		}
		private void commandShell() {
			System.out.println("\n\n================================");
			System.out.println(" Command Shell V0.01 ");
			System.out.println(" type 'exit' command to exit.");
			while (true) {
				readCommand(); 						// 读命令
				processCommand();	 					// 处理命令
			}
		}
		//************从控制台读入命令**************************
		private void readCommand() {
			…
		}
		/***********分析命令串********************************
		// cmds 用于保存命令的各个分量，如：命令：create sk213 10 5
		private void processCommand() { 
			…
		}
		//***********分割命令串********************************/
		private String[] command(String cmdStr) {
			…
		}
		private int readInt(String valstr) {						// 把字符串类型转换为整型
			int val = 0;
			try {
				val = Integer.parseInt(valstr);
			} catch (Exception e) {
				val = Integer.MIN_VALUE;
			}
			return val;
		}	
		private void createCommand(String[] cmds) {				// 判断命令是否正确
			if (cmds.length != 4) {
				System.out.println("create command error!");
			}
			else {
				flightName = cmds[1];
				row = readInt(cmds[2]);
				rowLength = readInt(cmds[3]);
				if (row <= 0 || rowLength <= 0) {
					System.out.println("create command parameters error!");
					flightName = null;
					row = 0;
					rowLength = 0;
				} else {
					try {
						flight = new Flight(flightName, row, rowLength);	// 创建航班座位
						System.out.println("create Flight OK!");
					} catch (Exception e) {
						System.out.println(e);
					flight = null;
						flightName = null;
						row = 0;
						rowLength = 0;
					}
				}
			}
		}
		//**********预订航班座位****************************
		private void reserveCommand(String[] cmds) { 			// 用户名放在cmds[1],cmds[2],...
			…
		}
		//**********取消预订航班座位*************************
	private void cancelCommand(String[] cmds) {
		…
	}
		 private void listCommand(String[] cmds) {
			if (cmds.length != 1) {
				System.out.println("\nlist command format error!");
				return;
			}
			Passenger[] passengerlist = flight.getPassengerList();
			int flag = 0;
			System.out.println("Name Booking Number Row Seat Position ");
			System.out.println("---------------------------------------------------------");
			if (passengerlist == null || passengerlist.length <= 0)
				System.out.println("Now no seat is occupied!");
			else {
				flag = 0;
				for (int b = 0; b < passengerlist.length; b++) {
					if (passengerlist[b] != null) {
						flag = 1;
						System.out.println(formatStr(passengerlist[b].getName())
								+ formatStr(""+ passengerlist[b].getBookingNumber())
								+ formatStr("" + passengerlist[b].getRow())+ formatStr(""
								+ passengerlist[b].getSeatPosition()));
					}
				}
				if (flag == 0)
					System.out.println("Now no seat is occupied!");
			}
		}
		private String formatStr(String s) {						// 返回字符串
			for (int i = 0; i < 16 - s.trim().length(); i++)
				s += ' ';
			return s;
		}
	}
